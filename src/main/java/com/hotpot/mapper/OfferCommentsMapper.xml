<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hotpot.dao.OfferCommentsMapper" >
  <resultMap id="BaseResultMap" type="com.hotpot.entity.OfferComments" >
    <id column="offer_id" property="offerId" jdbcType="INTEGER" />
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="commentor_id" property="commentorId" jdbcType="VARCHAR" />
    <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
    <result column="like_number" property="likeNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    offer_id, comment_id, commentor_id, comment_content, like_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from offer_comments
    where offer_id = #{offerId,jdbcType=INTEGER}
      and comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from offer_comments
    where offer_id = #{offerId,jdbcType=INTEGER}
      and comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotpot.entity.OfferComments" >
    insert into offer_comments (offer_id, comment_id, commentor_id, 
      comment_content, like_number)
    values (#{offerId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{commentorId,jdbcType=VARCHAR}, 
      #{commentContent,jdbcType=VARCHAR}, #{likeNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hotpot.entity.OfferComments" >
    insert into offer_comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="offerId != null" >
        offer_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="commentorId != null" >
        commentor_id,
      </if>
      <if test="commentContent != null" >
        comment_content,
      </if>
      <if test="likeNumber != null" >
        like_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="offerId != null" >
        #{offerId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="commentorId != null" >
        #{commentorId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="likeNumber != null" >
        #{likeNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotpot.entity.OfferComments" >
    update offer_comments
    <set >
      <if test="commentorId != null" >
        commentor_id = #{commentorId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null" >
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="likeNumber != null" >
        like_number = #{likeNumber,jdbcType=INTEGER},
      </if>
    </set>
    where offer_id = #{offerId,jdbcType=INTEGER}
      and comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotpot.entity.OfferComments" >
    update offer_comments
    set commentor_id = #{commentorId,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      like_number = #{likeNumber,jdbcType=INTEGER}
    where offer_id = #{offerId,jdbcType=INTEGER}
      and comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>